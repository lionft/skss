{"version":3,"sources":["images/team/cryptin.jpg","images/team/symphony.jpg","images/team/defi.png","images/team/gabi.png","components/About.js","images/dao/voting.png","images/dao/staking.png","images/dao/vault.png","images/dao/tokens.png","components/Dao.js","components/Features.js","images/logo.png","images/close.svg","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","components/Mint.js","components/Header.js","images/about.png","components/Quality.js","images/book2.png","components/Questions.js","components/Options.js","images/rocket2.svg","components/Pricing.js","screens/RoadmapScreen.js","screens/HomeScreen.js","components/Footer.js","images/twitter.svg","images/discord.svg","components/History.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","id","href","src","cryptin","alt","symphony","defi","gabi","Dao","voting","stacking","vault","tokens","Features","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Mint","showModal","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","Number","target","rel","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","WalletAddress","toUpperCase","TheOwnerAddress","OWNER_ADDRESS","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","Header","show","setShow","navShow","setNavShow","mobileNav","logo","closeImage","Quality","astro2","style","maxWidth","width","Questions","book","trigger","Options","Pricing","display","margin","rocket2","RoadmapScreen","HomeScreen","Footer","History","color","twitter","discord","App","Aos","init","useClassNames","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e959a3d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptin.b7f3d13e.jpg\";","export default __webpack_public_path__ + \"static/media/symphony.a6a2e305.jpg\";","export default __webpack_public_path__ + \"static/media/defi.14fb4d40.png\";","export default __webpack_public_path__ + \"static/media/gabi.4cb55483.png\";","import React from 'react';\nimport cryptin from '../images/team/cryptin.jpg';\nimport symphony from '../images/team/symphony.jpg';\nimport defi from '../images/team/defi.png';\nimport gabi from '../images/team/gabi.png';\n\nconst About = () => {\n  return (\n    <>\n      <div className='about' id='team'>\n        <div className='about__center center'>\n          <div className='about__list'></div>\n          <div className='about__wrap'>\n            <h2\n              className='questions__title h2'\n              data-aos='animation-scale-top'\n              data-aos-duration='600'\n            >\n              Team\n            </h2>\n            {/* <div\n              className='about__info'\n              data-aos='animation-scale-top'\n              data-aos-duration='600'\n            >\n              <span>❤</span> HQ All-Stars\n            </div> */}\n            <div className='about__team'>\n              <div className='about__user'>\n                <div className='about__ava'>\n                  <a href='#.'>\n                    <img src={cryptin} alt='' />\n                  </a>\n                </div>\n                <div className='about__category'>\n                  <a href='https://twitter.com/NFTcryptin'>@NFTcryptin</a>\n                </div>\n                <div className='about__post'>Cryptin - Developer</div>\n              </div>\n              <div className='about__user'>\n                <div className='about__ava'>\n                  <a href='https://twitter.com/NFTsym'>\n                    <img src={symphony} alt='' />\n                  </a>\n                </div>\n                <div className='about__category'>\n                  <a href='https://twitter.com/NFTsym'>@NFTsym</a>\n                </div>\n                <div className='about__post'>Symphony - Community Lead </div>\n              </div>\n              <div className='about__user'>\n                <div className='about__ava'>\n                  <a href='https://twitter.com/Defi_Dood'>\n                    <img src={defi} alt='' />\n                  </a>\n                </div>\n                <div className='about__category'>\n                  <a href='https://twitter.com/Defi_Dood'>@Defi_Dood</a>\n                </div>\n                <div className='about__post'>Defi Dood - Marketing </div>\n              </div>\n              <div className='about__user'>\n                <div className='about__ava'>\n                  <a href='https://twitter.com/Boeroiu2'>\n                    <img src={gabi} alt='' />\n                  </a>\n                </div>\n                <div className='about__category'>\n                  <a href='https://twitter.com/Boeroiu2'>@Boeroiu2</a>\n                </div>\n                <div className='about__post'>Gabi - Artist</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/voting.fc398c5b.png\";","export default __webpack_public_path__ + \"static/media/staking.fb308a50.png\";","export default __webpack_public_path__ + \"static/media/vault.0668dbc5.png\";","export default __webpack_public_path__ + \"static/media/tokens.4baeb7db.png\";","import React from 'react';\nimport voting from '../images/dao/voting.png';\nimport stacking from '../images/dao/staking.png';\nimport vault from '../images/dao/vault.png';\nimport tokens from '../images/dao/tokens.png';\nconst Dao = () => {\n  return (\n    <>\n      <section className='dao' id='dao'>\n        <div className='pricing'>\n          <div className='pricing__center center'>\n            <h2\n              className='pricing__title h2'\n              data-aos='animation-scale-top'\n              data-aos-duration={600}\n            >\n              Community DAO\n            </h2>\n            <div className='download__info'>\n              Owners get exclusive access to the DAO community. The DAO is a key\n              part of the value Doodle Punks provide. This allows the community\n              to engage and collaborate together to build something amazing that\n              we’re all part of. <br /> <br />\n              Starting with the purchase of blue chip NFTs for fractionalization\n              amongst members. In the future, innovative dev projects will also\n              be suggested and put to a vote, to decide the actions of the DAO.\n            </div>\n          </div>\n        </div>\n        <div className='options dao__options'>\n          <div className='options__center center'>\n            <div className='options__wrap'>\n              <div className='options__list'>\n                <div className='options__item'>\n                  <div className='options__info'>\n                    <img src={voting} alt='' />\n                  </div>\n                  <div className='options__info'>\n                    Voting <br />\n                  </div>\n                  <div className='options__text'>\n                    Each Doodle Punk NFT grants the owner one vote in the DAO.\n                    These votes will be opened to decide which blue-chip\n                    purchases to add to the community Vault, as well as the\n                    direction of future projects owners would like to create. ‍\n                  </div>\n                </div>\n                <div className='options__item'>\n                  <div className='options__info'>\n                    <img src={stacking} alt='' />\n                  </div>\n                  <div className='options__info'>\n                    Staking <br />\n                  </div>\n                  <div className='options__text'>\n                    Once you have a Doodle Punk NFT, you have the option to\n                    stake it. Staking is the mechanism by which fractional\n                    shares of the DAO treasury vault are distributed. These\n                    shares are distributed daily to holders in the form of our\n                    $CRAYON utility token. Each Doodle Punk NFT receives 10\n                    $CRAYON per day when staked. \n                  </div>\n                </div>\n                <div className='options__item'>\n                  <div className='options__info'>\n                    <img src={vault} alt='' />\n                  </div>\n                  <div className='options__info'>\n                    Vault <br />\n                  </div>\n                  <div className='options__text'>\n                    The Doodle Punks DAO will also purchase blue-chip NFT’s\n                    chosen by the community. Once acquired these assets can be\n                    fractionalized to the community holders. All staked Doodle\n                    Punks are members of the exclusive DAO, with perks such as\n                    utility voting privileges, $CRAYON utility tokens, valuable\n                    airdrops, giveaways, and deciding what future endeavors to\n                    explore. \n                  </div>\n                </div>\n                <div className='options__item'>\n                  <div className='options__info'>\n                    <img src={tokens} alt='' />\n                  </div>\n                  <div className='options__info'>\n                    Tokens <br />\n                  </div>\n                  <div className='options__text'>\n                    DoodlePunk DAO members receive $CRAYON utility tokens\n                    representing the fractional shares of NFTs held in the\n                    community vault. Doodle Punk DAO members will receive 10\n                    $CRAYON utility tokens per day, representing the fractional\n                    shares of NFTs held in the community vault.\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Dao;\n","import React from 'react';\n\nconst Features = () => {\n  return (\n    <>\n      <div className='features'>\n        <div className='features__center center'>\n          <h1\n            className='features__title d1'\n            data-aos='animation-scale-top'\n            data-aos-duration='600'\n          >\n            Experience the Highest, Utility NFT Collection Coming to the\n            Metaverse\n          </h1>\n          {/* <div className='features__info'>\n            10,000 Doodle Punks have been spotted with a $CRAYON in their hand\n            coloring & creating all types of designs on the Ethereum Blockchain.\n            <br />\n            This $CRAYON is their secret weapon to unlocking the endless\n            possibilities in the\n          </div> */}\n\n          <div className='main__partners'>\n            {/* <div className='main__info'>\n              Powered by Leading and Trusted Next Generation Technologies\n            </div> */}\n            <div className='main__list'>\n              {/* <div className='main__logo'>\n                <img src={serum} alt='' />\n              </div>\n              <div className='main__logo'>\n                <img src={solana} alt='' />\n              </div>\n              <div className='main__logo'>\n                <img src={arweave} alt='' />\n              </div>\n              <div className='main__logo'>\n                <img src={metaplex} alt='' />\n              </div> */}\n              {/* <Comments /> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Features;\n","export default __webpack_public_path__ + \"static/media/logo.238b43ee.png\";","export default __webpack_public_path__ + \"static/media/close.3803ac12.svg\";","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from 'web3-eth-contract';\nimport Web3 from 'web3';\n// log\nimport { fetchData } from '../data/dataActions';\n\nconst connectRequest = () => {\n  return {\n    type: 'CONNECTION_REQUEST',\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: 'CONNECTION_SUCCESS',\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: 'CONNECTION_FAILED',\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: 'UPDATE_ACCOUNT',\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch('/config/abi.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch('/config/config.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n        const networkId = await ethereum.request({\n          method: 'net_version',\n        });\n        // eslint-disable-next-line\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on('accountsChanged', (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed('Something went wrong.'));\n      }\n    } else {\n      dispatch(connectFailed('Install Metamask.'));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from '../redux/blockchain/blockchainActions';\nimport { fetchData } from '../redux/data/dataActions';\n\n// const truncate = (input, len) =>\n//   input.length > len ? `${input.substring(0, len)}...` : input;\nconst Mint = ({ showModal }) => {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: '',\n    SCAN_LINK: '',\n    NETWORK: {\n      NAME: '',\n      SYMBOL: '',\n      ID: 0,\n    },\n    NFT_NAME: '',\n    SYMBOL: '',\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: '',\n    MARKETPLACE_LINK: '',\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let WalletAddress = blockchain.account;\n    WalletAddress = WalletAddress.toUpperCase();\n\n    let TheOwnerAddress = CONFIG.OWNER_ADDRESS;\n    TheOwnerAddress = TheOwnerAddress.toUpperCase();\n\n    if (WalletAddress==TheOwnerAddress) {\n      CONFIG.WEI_COST=0;\n\n    } else if  \n    \n      (data.totalSupply > 1 && data.totalSupply < 1200  ) \n        CONFIG.WEI_COST=CONFIG.WEI_COST;\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW,  you’re now a proud  ${CONFIG.NFT_NAME} owners! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n      if (mintAmount <= 20 && mintAmount > 1) {\n        setMintAmount(mintAmount - 1);\n    }\n   \n  };\n\n  const incrementMintAmount = () => {\n    if (mintAmount >= 1 && mintAmount < 20) {\n      setMintAmount(mintAmount + 1);\n    }\n   \n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch('/config/config.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line\n  }, [blockchain.account]);\n  return (\n    <>\n      <div className='mint' id='mint'>\n        <div className='mint__wrapper'>\n          <div className='mint__inner'>\n            <div className='container'>\n              <div className='right__col'>\n                {/* <h3 className='title'>Mint buto head</h3> */}\n                <h1 className='count'>\n                  {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                </h1>\n                {/* <h3 className='sub__title'>0.1 eth per Buto head</h3> */}\n                <div className='mint__description'>\n                  {/* <p>Excluding gas fee </p> */}\n                  <p>connect to ethereum network</p>\n                </div>\n\n                {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                  <>\n                    <p className='font-bold text-default'>\n                      The sale has ended.\n                    </p>\n                    <p className='font-bold text-default'>\n                      You can still find {CONFIG.NFT_NAME} on\n                    </p>\n\n                    <a\n                      target='_blank'\n                      rel='noreferrer'\n                      href={CONFIG.MARKETPLACE_LINK}\n                    >\n                      {CONFIG.MARKETPLACE}\n                    </a>\n                  </>\n                ) : (\n                  <>\n                    {blockchain.account === '' ||\n                    blockchain.smartContract === null ? (\n                      <>\n                        <div className='mint__btn__wrapper'>\n                          <button\n                            className='btn mint__btn'\n                            onClick={(e) => {\n                              e.preventDefault();\n                              dispatch(connect());\n                              getData();\n                            }}\n                          >\n                            Connect\n                          </button>\n                        </div>\n                        {blockchain.errorMsg !== '' ? (\n                          <>\n                            <p className='err__msg text-center'>\n                              {blockchain.errorMsg}\n                            </p>\n                          </>\n                        ) : null}\n                      </>\n                    ) : (\n                      <>\n                        <p className='err__msg text-center'>{feedback}</p>\n                        <>\n                          <div className='buy__wrapper'>\n                            <div>\n                              <button\n                                className=''\n                                disabled={claimingNft ? 1 : 0}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  decrementMintAmount();\n                                }}\n                              >\n                                <span className='text-xl'>-</span>\n                              </button>\n                            </div>\n\n                            <p className='text-default font-bold text-xl border px-4 py-0.5 rounded-sm'>\n                              {mintAmount}\n                            </p>\n                            <div>\n                              <button\n                                className=''\n                                disabled={claimingNft ? 1 : 0}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  incrementMintAmount();\n                                }}\n                              >\n                                <span className='text-xl'>+</span>\n                              </button>\n                            </div>\n                          </div>\n                        </>\n                        <>\n                          <div>\n                            <div className='mint__btn__wrapper'>\n                              <button\n                                className='btn mint__btn'\n                                disabled={claimingNft ? 1 : 0}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  claimNFTs();\n                                  getData();\n                                }}\n                              >\n                                <span>{claimingNft ? 'BUSY' : 'MINT'}</span>\n                              </button>\n                            </div>\n                          </div>\n                        </>\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Mint;\n","import React, { useState } from 'react';\nimport logo from '../images/logo.png';\nimport closeImage from '../images/close.svg';\nimport Mint from './Mint';\n\nconst Header = () => {\n  const [show, setShow] = useState(false);\n  const [navShow, setNavShow] = useState(false);\n\n  const openNav = (e) => {\n    setNavShow(true);\n  };\n  const closeNav = (e) => {\n    setNavShow(false);\n  };\n  const showModal = () => {\n    setShow(true);\n  };\n\n  const mobileNav = () => {\n    setNavShow(false);\n    showModal();\n  };\n\n  return (\n    <>\n      <header className='header'>\n        <div className='header__center center'>\n          <a className='header__logo' href='/'>\n            <img\n              className='header__pic header__pic_light'\n              src={logo}\n              alt={logo}\n            />\n          </a>\n          <div className='header__wrapper'>\n            <nav className='header__nav'>\n              <a className='header__link' href='#about'>\n                About\n              </a>\n              <a className='header__link' href='#dao'>\n                DAO\n              </a>\n              <a className='header__link' href='#roadmap'>\n                Roadmap\n              </a>\n              <a className='header__link' href='#team'>\n                Team\n              </a>\n              <a className='header__link' href='#faq'>\n                <span>FAQ</span>s\n              </a>\n            </nav>\n            <div className='header__btns'>\n              <button\n                className='heahrefhrefder__btn btn btn_border'\n                onClick={showModal}\n              >\n                Connect Wallet\n              </button>\n            </div>\n          </div>\n\n          {navShow && (\n            <div className='header__wrapper visible'>\n              <nav className='header__nav'>\n                <a className='header__link' href='#about' onClick={mobileNav}>\n                  About\n                </a>\n                <a className='header__link' href='#dao' onClick={mobileNav}>\n                  DAO\n                </a>\n                <a className='header__link' href='#roadmap' onClick={mobileNav}>\n                  Roadmap\n                </a>\n                <a className='header__link' href='#team' onClick={mobileNav}>\n                  Team\n                </a>\n                <a className='header__link' href='#faq' onClick={mobileNav}>\n                  <span>FAQ</span>s\n                </a>\n              </nav>\n              <div className='header__btns'>\n                <button\n                  className='header__btn btn btn_border'\n                  onClick={() => {\n                    showModal();\n                    mobileNav();\n                  }}\n                >\n                  Connect Wallet\n                </button>\n              </div>\n            </div>\n          )}\n          <button\n            className={`header__burger ${navShow && 'remove__header__burger'}`}\n            onClick={(e) => openNav(e)}\n          ></button>\n\n          <button\n            className={` close__btn__visible ${navShow && 'close__nav'}`}\n            onClick={(e) => closeNav(e)}\n          >\n            <img src={closeImage} alt='' />\n          </button>\n        </div>\n      </header>\n      {show && <Mint />}\n    </>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/about.7242b1bb.png\";","import React from 'react';\nimport astro2 from '../images/about.png';\nconst Quality = () => {\n  return (\n    <>\n      <div className='quality' id='about'>\n        <div className='quality__center center'>\n          <div className='share__container'>\n            <div className='quality__bg' />\n            <div className='share__row'>\n              <div className='share__col'>\n                <h4 className='share__title h2'>What are Doodle Punks</h4>\n                <div className='share__text h7'>\n                  <br />A collection of 9,999 unique Doodle Punk avatars living\n                  on the Ethereum blockchain. Each one is algorithmically\n                  generated from a combination of over 200 individually drawn\n                  elements, to create legendary collections and 1/1 rarity.\n                  <br />\n                  <br />\n                  The Doodle Punks project is being developed with long-term,\n                  metaverse implementation in mind.From inception, the founders\n                  have envisioned 3D application, customizable features, and\n                  monetization elements to fully capitalize on the future of\n                  digital interaction & ownership.\n                </div>\n              </div>\n              <div className='share__col'>\n                <h4 className='share__title h4'>\n                  <img\n                    src={astro2}\n                    style={{ maxWidth: '370px', width: '100%' }}\n                    alt=''\n                  />\n                </h4>\n              </div>\n            </div>\n          </div>\n          <div className='quality__bottom'>\n            <div className='quality__item'>\n              <div className='quality__counter'>9,999</div>\n              <div className='quality__category'>Generative Doodle Punks</div>\n            </div>\n            <div className='quality__item'>\n              <div className='quality__counter'>156</div>\n              <div className='quality__category'>Unique Attributes</div>\n            </div>\n            <div className='quality__item'>\n              <div className='quality__counter'>\n                .07\n                {/* <span className='quality__sign quality__sign_down'>◎</span> */}\n              </div>\n              <div className='quality__category'>ETH to Mint</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Quality;\n","export default __webpack_public_path__ + \"static/media/book2.36f5d2a8.png\";","import React from 'react';\nimport Collapsible from 'react-collapsible';\nimport book from '../images/book2.png';\n\nconst Questions = () => {\n  return (\n    <>\n      <div className='questions' id='faq'>\n        <div className='questions__center center'>\n          <div className='questions__preview'>\n            <img src={book} alt='' />\n          </div>\n          <h2\n            className='questions__title h2'\n            data-aos='animation-scale-top'\n            data-aos-duration='600'\n          >\n            Frequently asked questions\n          </h2>\n          <div className='questions__list'>\n            <div className='questions__item'>\n              <Collapsible\n                trigger='When is the mint?'\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  The exclusive whitelist presale will begin on Dec 11th @ 6pm\n                  CET (12pm EST). Public sale will open Dec 12th @ 6pm CET.\n                </div>\n              </Collapsible>\n            </div>\n            <div className='questions__item'>\n              <Collapsible\n                trigger='How much will it cost?'\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  Each NFT will be .06 ETH for our Whitelist community, and .07\n                  ETH for the public sale. Gas fees not included and will vary.\n                </div>\n              </Collapsible>\n            </div>\n\n            <div className='questions__item'>\n              <Collapsible\n                trigger='What is Staking?'\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  When you buy a Doodle Punks NFT, you have the option to stake\n                  it. Staking is the mechanism by which fractional shares of the\n                  DAO community’s vault of NFTs are distributed. These fractions\n                  are distributed daily to holders in the form of our native\n                  $CRAYON token. Each Doodle Punk NFT can be staked to earn 10\n                  $CRAYON's per day. $CRAYON tokens can also be traded on the\n                  secondary market via SushiSwap.\n                </div>\n              </Collapsible>\n            </div>\n\n            <div className='questions__item'>\n              <Collapsible\n                trigger='What is CRAYON?'\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  $CRAYONs are a key part of the Doodle Punks project, and will\n                  have a multitude of use cases as our project grows, from\n                  raffle entries, exclusive merchandise, alpha access, and of\n                  course breeding of Doodle Punks (soon to be announced). But we\n                  strongly feel that it is only scratching the surface of what\n                  $CRAYONs could do.\n                </div>\n              </Collapsible>\n            </div>\n            <div className='questions__item'>\n              <Collapsible\n                trigger='What are the traits and rarities?'\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  Every Doodle Punk has unique traits and attributes, but some\n                  traits are more rare and special than others. These rarities\n                  are often used to determine value but we think all of them are\n                  amazing.\n                </div>\n              </Collapsible>\n            </div>\n            <div className='questions__item'>\n              <Collapsible\n                trigger='Do I get more benefits if I own more? '\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  Yes. Fractions will be distributed based on how many Doodle\n                  Punks you have staked. The more you own, the more $CRAYON\n                  utility tokens you receive.\n                </div>\n              </Collapsible>\n            </div>\n            <div className='questions__item'>\n              <Collapsible\n                trigger='What is the Utility Token?'\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  $CRAYON will be an ERC-20 utility token airdropped to staked\n                  Doodle Punks NFTs. This token will have various uses within\n                  our ecosystem but it is key to understand that 1 $CRAYON = 1\n                  $CRAYON. And that it has no promise of value.\n                </div>\n              </Collapsible>\n            </div>\n            <div className='questions__item'>\n              <Collapsible\n                trigger='I have more questions, where can ask?'\n                className='questions__head'\n              >\n                <div className='questions__body'>\n                  You can reach out to us in our Discord at any time or by email\n                  at info@doodle-punks.com. Thank you, hope to hear from you\n                  soon!\n                </div>\n              </Collapsible>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Questions;\n","import React from 'react';\n\nconst Options = () => {\n  return (\n    <>\n      <div className='options'>\n        <div className='options__center center'>\n          <div className='options__wrap'>\n            <div className='options__list'>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>1 </h1>\n                </div>\n                <div className='options__info'>Artwork & Community</div>\n                <div className='options__text'>\n                  Create a unique NFT collection and build a thriving online\n                  community that understands and shares our vision.\n                </div>\n              </div>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>2</h1>\n                </div>\n                <div className='options__info'>Marketing & Growth</div>\n                <div className='options__text'>\n                  Attract, inform, and excite new members to join the community.\n                  Demonstrate the value that token owners will receive.\n                </div>\n              </div>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>3</h1>\n                </div>\n                <div className='options__info'>Mint & Reveal</div>\n                <div className='options__text'>\n                  Develop & deploy verified smart contract for a successful\n                  randomized mint and reveal for unique token rarities.\n                </div>\n              </div>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>4</h1>\n                </div>\n                <div className='options__info'>Initiate DAO</div>\n                <div className='options__text'>\n                  Launch DAO protocol to enable Doodle Punk owners to stake,\n                  vote, and redeem $CRAYON utility tokens.\n                </div>\n              </div>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>5</h1>\n                </div>\n                <div className='options__info'>Vault Treasury</div>\n                <div className='options__text'>\n                  Begin acquiring key value assets like blue-chip NFT's and\n                  digital land to hold for long-term value, application, and\n                  fractionalization.\n                </div>\n              </div>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>6</h1>\n                </div>\n                <div className='options__info'> Develop Collection 2.0</div>\n                <div className='options__text'>\n                  Female Doodle Punk Companion collection - Breeding\n                  Capabilities\n                </div>\n              </div>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>7</h1>\n                </div>\n                <div className='options__info'>Malibu Community Meetup</div>\n                <div className='options__text'>\n                  Host an epic IRL party weekend in Malibu for our awesome\n                  members\n                </div>\n              </div>\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>8</h1>\n                </div>\n                <div className='options__info'>\n                  Develop Metaverse Implementation\n                </div>\n                <div className='options__text'>\n                  Launch Metaverse applications 3D avatars, build communal\n                  spaces, customizable assets to pioneer meta monetization.\n                </div>\n              </div>\n\n              <div className='options__item'>\n                <div className='options__info'>\n                  <h1>9</h1>\n                </div>\n                <div className='options__info'>Exclusive Miami Yacht Party</div>\n                <div className='options__text'>\n                  The ultimate indicator of success and achievement. Yacht party\n                  for our OG holders, Diamond Holders, and 1/1 Legendary’s.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Options;\n","export default __webpack_public_path__ + \"static/media/rocket2.075cf679.svg\";","import React from 'react';\nimport rocket2 from '../images/rocket2.svg';\n\nconst Pricing = () => {\n  return (\n    <>\n      <div className='pricing'>\n        <div className='pricing__center center'>\n          <h2\n            className='pricing__title h2'\n            data-aos='animation-scale-top'\n            data-aos-duration={600}\n          >\n            Doodle Punks Roadmap\n          </h2>\n          <div className='download__info'>\n            We are committed to progressively building, expanding and evolving\n            Doodle Punks through innovation, creativity and community\n            solidarity.\n          </div>\n          <div\n            className='about__preview aos-animate'\n            data-aos='animation-translate-up'\n            data-aos-duration={1000}\n            data-data-aos-delay={600}\n          >\n            <object\n              type='image/svg+xml'\n              style={{ maxWidth: '300px', display: 'block', margin: 'auto' }}\n              data={rocket2}\n            >\n              <img src={rocket2} style={{ maxWidth: '150px' }} alt='' />\n            </object>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Pricing;\n","import React from 'react';\nimport Options from '../components/Options';\nimport Pricing from '../components/Pricing';\n\nconst RoadmapScreen = () => {\n  return (\n    <>\n      <div id='roadmap'>\n        <Pricing />\n        <Options />\n      </div>\n    </>\n  );\n};\n\nexport default RoadmapScreen;\n","import React from 'react';\nimport About from '../components/About';\nimport Dao from '../components/Dao';\nimport Features from '../components/Features';\nimport Header from '../components/Header';\nimport Quality from '../components/Quality';\nimport Questions from '../components/Questions';\nimport RoadmapScreen from './RoadmapScreen';\n\nconst HomeScreen = () => {\n  return (\n    <>\n      <div className='top__wrapper'>\n        <Header />\n        <Features />\n      </div>\n      <Quality />\n      <Dao />\n      <RoadmapScreen />\n      <About />\n      <Questions />\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <>\n      <div className='footer'>\n        <div className='footer__center center'>\n          <div className='footer__line'></div>\n          <div className='footer__bottom'>\n            <div className='footer__copyright center'>\n              © 2021 Doodle Punks. All rights reserved.\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/twitter.6acd6f97.svg\";","export default __webpack_public_path__ + \"static/media/discord.901201bf.svg\";","import React from 'react';\nimport twitter from '../images/twitter.svg';\nimport discord from '../images/discord.svg';\n\nconst History = () => {\n  return (\n    <>\n      <div className='history'>\n        <div className='offer__center center'>\n          <div className='offer__container'>\n            <h2\n              className='offer__title h2'\n              data-aos='animation-scale-top'\n              data-aos-duration='600'\n            >\n              Join the Community\n            </h2>\n            <button className='features__btn btn btn_orange'>\n              <a\n                href='https://twitter.com/DoodlePunks_NFT'\n                style={{ color: '#ffffff' }}\n              >\n                <img className='icon icon-twitter' src={twitter} alt='' />\n                <span>Twitter</span>\n              </a>\n            </button>{' '}\n            &nbsp;{' '}\n            <a\n              href='https://discord.gg/doodlepunks'\n              style={{ color: '#ffffff' }}\n            >\n              <button className='features__btn btn btn btn_orange'>\n                <img className='icon icon-twitter' src={discord} alt='' />\n                <span>Discord</span>\n              </button>\n            </a>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default History;\n","import './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport Footer from './components/Footer';\nimport History from './components/History';\nimport { useEffect } from 'react';\nimport Aos from 'aos';\n\nfunction App() {\n  useEffect(() => {\n    Aos.init({\n      useClassNames: false,\n    });\n  }, []);\n  return (\n    <>\n      <HomeScreen />\n      <History />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport 'aos/dist/aos.css';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}